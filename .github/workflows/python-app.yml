# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "dora-test" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage
        pip install -U ddtrace
      env:
        DD_TAG: step-test-tag

    - name: Test with pytest
      run: |
        export DD_CIVISIBILITY_AGENTLESS_ENABLED=true
        export DD_API_KEY=${{ secrets.DD_API_KEY }}
        export DD_SITE=datadoghq.com
        export DD_ENV=ci
        export DD_SERVICE=my-python-app
        pytest --ddtrace

    - name: add datadog tags
      run: |
        export DD_API_KEY=${{ secrets.DD_API_KEY }}
        export DD_SITE=$DD_SITE
        export DD_ENV=ci
        export DD_SERVICE=my-python-app
        export DD_TAGS=team:ci
        
        npm install -g @datadog/datadog-ci
        datadog-ci tag --level pipeline

  deploy-qa:
    runs-on: 'ubuntu-latest'
    environment: 'QA'
    steps:
      - name: deploy to QA
        run: |
          echo `start time is: date +%s` 
          echo `git repo is: ${{ github.repository }}` 
          echo `git commit sha is: ${{ github.GITHUB_SHA }}
          
          export deploy_start=`date +%s`
          export DD_BETA_COMMANDS_ENABLED=1
          export DD_SITE=datadoghq.com
          export DD_API_KEY=${{ secrets.DD_API_KEY }}
          
          echo "deploy to QA"
          sleep 1m

          datadog-ci dora deployment --service myPythonService --env QA \
              --started-at $deploy_start --finished-at `date +%s` \
              --git-repository-url ${{ github.repository }} \
              --git-commit-sha ${{ github.GITHUB_SHA }}


